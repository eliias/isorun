name: Build and release gem

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - "v*"

jobs:
  ci-data:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.fetch.outputs.result }}
    steps:
      - uses: oxidize-rb/actions/fetch-ci-data@v1
        id: fetch
        with:
          supported-ruby-platforms: |
            exclude: ["arm-linux", "aarch64-linux", "x64-mingw-ucrt", "x64-mingw32", "x86_64-linux-musl"]
          stable-ruby-versions: |
            exclude: ["head", "2.7"]
  cross-gem:
    name: Compile native gem for ${{ matrix.platform }}
    runs-on: ubuntu-latest
    needs: ci-data
    strategy:
      matrix:
        platform: ${{ fromJSON(needs.ci-data.outputs.result).supported-ruby-platforms }}
    steps:
      - name: Install protobuf
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt install -y protobuf-compiler

      - name: Install protobuf
        if: matrix.os == 'macos-latest'
        run: brew install protobuf

      - uses: actions/checkout@v2

      - uses: oxidize-rb/actions/cross-gem@v1
        with:
          platform: ${{ matrix.platform }}
          ruby-versions: ${{ join(fromJSON(needs.ci-data.outputs.result).stable-ruby-versions, ',') }}

      - uses: actions/upload-artifact@v2
        with:
          name: cross-gem
          path: ${{ steps.cross-gem.outputs.gem-path }}

      - name: Display structure of built gems
        run: ls -R
        working-directory: pkg/

      - name: Release gem
        if: startsWith(github.ref, 'refs/tags/v')
        working-directory: pkg/
        env:
          RUBYGEMS_API_KEY: ${{secrets.RUBYGEMS_API_KEY}}
        run: |
          mkdir -p $HOME/.gem
          touch $HOME/.gem/credentials
          chmod 0600 $HOME/.gem/credentials
          printf -- "---\n:rubygems_api_key: ${RUBYGEMS_API_KEY}\n" > $HOME/.gem/credentials
          for i in *.gem; do
            if [ -f "$i" ]
            then
              gem push "$i" || true
            fi
          done
